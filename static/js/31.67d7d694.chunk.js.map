{"version":3,"file":"static/js/31.67d7d694.chunk.js","mappings":"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","sources":["components/Banner/index.js","constants/images.js","features/Photo/components/PhotoCard/index.jsx","features/Photo/components/PhotoList/index.jsx","features/Photo/pages/Main/index.jsx","constants/global.js","custom-fields/InputField/index.jsx","components/RandomPhoto/index.js","custom-fields/RandomPhotoField/index.jsx","custom-fields/SelectField/index.jsx","features/Photo/components/PhotoForm/index.jsx","features/Photo/pages/AddEdit/index.jsx","utils/common.js","features/Photo/index.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Banner.scss\";\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string,\r\n  backgroundUrl: PropTypes.string,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  title: \"\",\r\n  backgroundUrl: \"\",\r\n};\r\n\r\nfunction Banner(props) {\r\n  const { title, backgroundUrl } = props;\r\n\r\n  const bannerStyle = backgroundUrl\r\n    ? { backgroundImage: `url(${backgroundUrl})` }\r\n    : {};\r\n\r\n  return (\r\n    <section className=\"banner\" style={bannerStyle}>\r\n      <h1 className=\"banner__title\">{title}</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import orangeBackground from \"../assets/images/orange-bg.jpg\";\r\nimport blueBackground from \"../assets/images/blue-bg.jpg\";\r\nimport colorfulBackground from \"../assets/images/colorful-bg.jpg\";\r\nimport pinkBackground from \"../assets/images/pink-bg.jpg\";\r\n\r\nconst Images = {\r\n  ORANGE_BG: orangeBackground,\r\n  BLUE_BG: blueBackground,\r\n  COLORFUL_BG: colorfulBackground,\r\n  PINK_BG: pinkBackground,\r\n};\r\n\r\nexport default Images;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./PhotoCard.scss\";\r\n\r\nPhotoCard.propTypes = {\r\n  photo: PropTypes.object,\r\n  onEditClick: PropTypes.func,\r\n  onRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  photo: {},\r\n  onEditClick: null,\r\n  onRemoveClick: null,\r\n};\r\n\r\nfunction PhotoCard(props) {\r\n  const { photo, onEditClick, onRemoveClick } = props;\r\n\r\n  const handleEditClick = () => {\r\n    if (onEditClick) onEditClick(photo);\r\n  };\r\n\r\n  const handleRemoveClick = () => {\r\n    if (onRemoveClick) onRemoveClick(photo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={photo.photo} alt={photo.title} />\r\n\r\n      <div className=\"photo__overlay\">\r\n        <h3 className=\"photo__title\">{photo.title}</h3>\r\n\r\n        <div className=\"photo__actions\">\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"light\" onClick={handleEditClick}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              outline\r\n              size=\"sm\"\r\n              color=\"danger\"\r\n              onClick={handleRemoveClick}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport PhotoCard from \"../PhotoCard\";\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: [],\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nfunction PhotoList(props) {\r\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n  console.log({ photoList });\r\n\r\n  return (\r\n    <Row>\r\n      {photoList.map((photo) => (\r\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\r\n          <PhotoCard\r\n            photo={photo}\r\n            onEditClick={onPhotoEditClick}\r\n            onRemoveClick={onPhotoRemoveClick}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PhotoList;\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport Banner from \"components/Banner\";\r\nimport Images from \"constants/images\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhotoList from \"features/Photo/components/PhotoList\";\r\nimport { removePhoto } from \"features/Photo/PhotoSlice\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n  const photos = useSelector((state) => state.photos);\r\n  console.log(\"list of photo\", photos);\r\n  const history = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditClick = (photo) => {\r\n    console.log(\"edit\", photo);\r\n    const editPhotoUrl = `/photos/${photo.id}`;\r\n\r\n    history(editPhotoUrl);\r\n  };\r\n\r\n  const handleRemoveClick = (photo) => {\r\n    console.log(\"remove\", photo);\r\n    const removePhotoId = photo.id;\r\n    const action = removePhoto(removePhotoId);\r\n    dispatch(action);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-main\">\r\n      <Banner title=\"your awesome photos\" backgroundUrl={Images.PINK_BG} />\r\n\r\n      <Container className=\"text-center\">\r\n        <div className=\"py-5\">\r\n          <Link to=\"add\">Add new photo</Link>\r\n        </div>\r\n\r\n        <PhotoList\r\n          photoList={photos}\r\n          onPhotoEditClick={handleEditClick}\r\n          onPhotoRemoveClick={handleRemoveClick}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","export const PHOTO_CATEGORY_OPTIONS = [\r\n  { value: 1, label: \"Technology\" },\r\n  { value: 2, label: \"Education\" },\r\n  { value: 3, label: \"Nature\" },\r\n  { value: 4, label: \"Animals\" },\r\n  { value: 5, label: \"Styles\" },\r\n];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  type: \"text\",\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n};\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, disabled, placeholder } = props;\r\n  const { name } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <Input\r\n        id={name}\r\n        {...field}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        invalid={showError}\r\n      ></Input>\r\n      <ErrorMessage name={name} component={FormFeedback}></ErrorMessage>\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./RandomPhoto.scss\";\r\n\r\nRandomPhoto.propTypes = {\r\n  name: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  onImageUrlChange: PropTypes.func,\r\n  onRandomButtonBlur: PropTypes.func,\r\n};\r\n\r\nRandomPhoto.defaultProps = {\r\n  name: \"\",\r\n  imageUrl: \"\",\r\n  onImageUrlChange: null,\r\n  onRandomButtonBlur: null,\r\n};\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  return `https://picsum.photos/id/${randomId}/300/300`;\r\n};\r\n\r\nfunction RandomPhoto(props) {\r\n  const { name, imageUrl, onImageUrlChange, onRandomButtonBlur } = props;\r\n\r\n  const handleRandomPhotoClick = async () => {\r\n    if (onImageUrlChange) {\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onImageUrlChange(randomImageUrl);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"random-photo\">\r\n      <div className=\"random-photo__button\">\r\n        <Button\r\n          outline\r\n          name={name}\r\n          color=\"primary\"\r\n          onBlur={onRandomButtonBlur}\r\n          onClick={handleRandomPhotoClick}\r\n        >\r\n          Random a Photo\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"random-photo__photo\">\r\n        {imageUrl && (\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"Ooops ... not found. please click random again\"\r\n            onError={handleRandomPhotoClick}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomPhoto;\r\n","import RandomPhoto from \"components/RandomPhoto\";\r\nimport { ErrorMessage } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n};\r\n\r\nRandomPhotoField.defaultProps = {\r\n  label: \"\",\r\n};\r\n\r\nfunction RandomPhotoField(props) {\r\n  const { field, form, label } = props;\r\n  const { name, value, onBlur } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const handleImageUrlChange = (newImageUrl) => {\r\n    form.setFieldValue(name, newImageUrl);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <RandomPhoto\r\n        name={name}\r\n        imageUrl={value}\r\n        onImageUrlChange={handleImageUrlChange}\r\n        onRandomButtonBlur={onBlur}\r\n      />\r\n\r\n      <div className={showError ? \"is-invalid\" : \"\"}></div>\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default RandomPhotoField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label, FormFeedback } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nSelectField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  options: PropTypes.array,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n  options: [],\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n};\r\n\r\nfunction SelectField(props) {\r\n  const { field, form, options, label, disabled, placeholder } = props;\r\n  const { name, value } = field;\r\n  const selectedOption = options.find((option) => option.value === value);\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const handleSelectOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption\r\n      ? selectedOption.value\r\n      : selectedOption;\r\n\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    field.onChange(changeEvent);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <Select\r\n        id={name}\r\n        {...field}\r\n        value={selectedOption}\r\n        onChange={handleSelectOptionChange}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        className={showError ? \"is-invalid\" : \"\"}\r\n      ></Select>\r\n      <ErrorMessage name={name} component={FormFeedback}></ErrorMessage>\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default SelectField;\r\n","import { PHOTO_CATEGORY_OPTIONS } from \"constants/global\";\r\nimport InputField from \"custom-fields/InputField\";\r\nimport RandomPhotoField from \"custom-fields/RandomPhotoField\";\r\nimport SelectField from \"custom-fields/SelectField\";\r\nimport { FastField, Formik, Form } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button, FormGroup, Spinner } from \"reactstrap\";\r\nimport * as Yup from \"yup\";\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPhotoForm.defaultProps = {\r\n  onSubmit: null,\r\n};\r\n\r\nfunction PhotoForm(props) {\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"this field is required\"),\r\n    categoryId: Yup.number().required(\"this field is required\").nullable(),\r\n    photo: Yup.string().when(\"categoryId\", {\r\n      is: 1,\r\n      then: Yup.string().required(\"this field is required\"),\r\n      otherwise: Yup.string().notRequired(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      {(formikProps) => {\r\n        // do something\r\n        const { values, errors, touched, isSubmitting } = formikProps;\r\n        console.log({ values, errors, touched });\r\n\r\n        return (\r\n          <Form>\r\n            <FastField\r\n              name=\"title\"\r\n              component={InputField}\r\n              label=\"Title\"\r\n              placeholder=\"Eg: Wow nature ...\"\r\n            />\r\n\r\n            <FastField\r\n              name=\"categoryId\"\r\n              component={SelectField}\r\n              label=\"Category\"\r\n              placeholder=\"what's your photo category?\"\r\n              options={PHOTO_CATEGORY_OPTIONS}\r\n            />\r\n\r\n            <FastField\r\n              name=\"photo\"\r\n              component={RandomPhotoField}\r\n              label=\"Photo\"\r\n            />\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color={isAddMode ? \"primary\" : \"success\"}>\r\n                {isSubmitting && <Spinner size=\"sm\"></Spinner>}\r\n                {isAddMode ? \"Add to album\" : \"Update your Photo\"}\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default PhotoForm;\r\n","import Banner from \"components/Banner\";\r\nimport PhotoForm from \"features/Photo/components/PhotoForm\";\r\nimport { addPhoto, updatePhoto } from \"features/Photo/PhotoSlice\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\";\r\nimport { randomNumber } from \"utils/common\";\r\nimport \"./styles.scss\";\r\n\r\nAddEditPage.propTypes = {};\r\n\r\nfunction AddEditPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useNavigate();\r\n  const { photoId } = useParams();\r\n  const isAddMode = !photoId;\r\n\r\n  const editPhoto = useSelector((state) =>\r\n    state.photos.find((x) => x.id === +photoId)\r\n  );\r\n\r\n  const initialValues = isAddMode\r\n    ? {\r\n        title: \"\",\r\n        categoryId: null,\r\n        photo: \"\",\r\n      }\r\n    : editPhoto;\r\n\r\n  const handleSubmit = (value) => {\r\n    return new Promise((resolve) => {\r\n      console.log(\"formsubmit\", value);\r\n\r\n      setTimeout(() => {\r\n        if (isAddMode) {\r\n          const newPhoto = {\r\n            ...value,\r\n            id: randomNumber(10000, 99999),\r\n          };\r\n\r\n          const action = addPhoto(newPhoto);\r\n          console.log(action);\r\n          dispatch(action);\r\n        } else {\r\n          const action = updatePhoto(value);\r\n          dispatch(action);\r\n        }\r\n        history(\"/photos\");\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-edit\">\r\n      <Banner title=\"Pick your amazing photo\" />\r\n\r\n      <div className=\"photo-edit__form\">\r\n        <PhotoForm\r\n          isAddMode={isAddMode}\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n        />\r\n      </div>\r\n\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEditPage;\r\n","export const randomNumber = (min, max) => {\r\n  return min + Math.trunc(Math.random() * (max - min));\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport MainPage from \"./pages/Main\";\r\nimport AddEditPage from \"./pages/AddEdit\";\r\nimport NotFound from \"components/NotFound\";\r\n\r\nPhoto.propTypes = {};\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<MainPage />} />\r\n\r\n        <Route path=\"add\" element={<AddEditPage />} />\r\n        <Route path=\":photoId\" element={<AddEditPage />} />\r\n\r\n        <Route path=\"*\" element={<NotFound />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"names":["Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","ORANGE_BG","BLUE_BG","COLORFUL_BG","PINK_BG","PhotoCard","photo","onEditClick","onRemoveClick","src","alt","outline","size","color","onClick","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","console","log","map","xs","md","lg","photos","useSelector","state","history","useNavigate","dispatch","useDispatch","Images","to","editPhotoUrl","id","removePhotoId","action","removePhoto","PHOTO_CATEGORY_OPTIONS","value","label","InputField","field","form","type","disabled","placeholder","name","errors","touched","showError","for","invalid","component","FormFeedback","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBlur","getRandomImageUrl","randomId","Math","trunc","random","handleRandomPhotoClick","randomImageUrl","onBlur","onError","RandomPhotoField","newImageUrl","setFieldValue","SelectField","options","selectedOption","find","option","onChange","selectedValue","changeEvent","target","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","when","is","then","otherwise","notRequired","onSubmit","formikProps","values","isSubmitting","photoId","useParams","editPhoto","x","Promise","resolve","setTimeout","newPhoto","min","max","addPhoto","updatePhoto","path","element","Main","AddEdit","NotFound"],"sourceRoot":""}